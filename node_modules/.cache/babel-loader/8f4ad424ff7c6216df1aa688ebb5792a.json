{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Projects/weather_app/src/components/App/App.jsx\";\nimport React from 'react';\nimport './app.css';\nimport { MainWeather } from '../weather';\nimport { LocationForm } from '../locationForm';\nimport { Weather } from '../../Weather';\nimport { reduceForecast } from '../../Utils';\nimport { DailyWeather } from '../DailyForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_APP_ID\n} = process.env;\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentDayWeather: undefined,\n      location: 'London',\n      forecast: []\n    };\n\n    this.getCurrentWeather = async () => {\n      const requestUrl = `https://api.openweathermap.org/data/2.5/weather?appid=${REACT_APP_APP_ID}&q=${this.state.location}&units=metric`;\n      const response = await fetch(requestUrl);\n      const data = await response.json();\n      this.setState({\n        currentDayWeather: new Weather(data)\n      });\n    };\n\n    this.getForecast = async () => {\n      const requestUrl = `https://api.openweathermap.org/data/2.5/forecast?appid=${REACT_APP_APP_ID}&q=${this.state.location}&units=metric&cnt=40`;\n      const response = await fetch(requestUrl);\n      const data = await response.json();\n      const dayliForecast = reduceForecast(data.list);\n      this.setState({\n        forecast: dayliForecast\n      });\n    };\n\n    this.search = text => {\n      this.setState({\n        location: text\n      }, () => {\n        this.getCurrentWeather();\n        this.getForecast();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrentWeather();\n    this.getForecast();\n  }\n\n  render() {\n    if (!this.state.currentDayWeather) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MainWeather, {\n        data: this.state.currentDayWeather,\n        children: /*#__PURE__*/_jsxDEV(LocationForm, {\n          location: this.state.location,\n          onSubmit: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DailyWeather, {\n        forecast: this.state.forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/macuser/Projects/weather_app/src/components/App/App.jsx"],"names":["React","MainWeather","LocationForm","Weather","reduceForecast","DailyWeather","REACT_APP_APP_ID","process","env","App","Component","state","currentDayWeather","undefined","location","forecast","getCurrentWeather","requestUrl","response","fetch","data","json","setState","getForecast","dayliForecast","list","search","text","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAuBC,OAAO,CAACC,GAArC;AACA,OAAO,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,iBAAiB,EAAEC,SADb;AAENC,MAAAA,QAAQ,EAAE,QAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD+B;;AAAA,SAMvCC,iBANuC,GAMnB,YAAY;AAC9B,YAAMC,UAAU,GAAI,yDAAwDX,gBAAiB,MAAK,KAAKK,KAAL,CAAWG,QAAS,eAAtH;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,iBAAiB,EAAE,IAAIT,OAAJ,CAAYiB,IAAZ;AAArB,OAAd;AACD,KAXsC;;AAAA,SAavCG,WAbuC,GAazB,YAAY;AACxB,YAAMN,UAAU,GAAI,0DAAyDX,gBAAiB,MAAK,KAAKK,KAAL,CAAWG,QAAS,sBAAvH;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMG,aAAa,GAAGpB,cAAc,CAACgB,IAAI,CAACK,IAAN,CAApC;AACA,WAAKH,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAES;AAAZ,OAAd;AACD,KAnBsC;;AAAA,SAyBvCE,MAzBuC,GAyB7BC,IAAD,IAAU;AACjB,WAAKL,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEa;AAAZ,OAAd,EAAkC,MAAM;AACtC,aAAKX,iBAAL;AACA,aAAKO,WAAL;AACD,OAHD;AAID,KA9BsC;AAAA;;AAqBvCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,iBAAL;AACA,SAAKO,WAAL;AACD;;AAQDM,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKlB,KAAL,CAAWC,iBAAhB,EAAmC;AACjC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,iBAA9B;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QAAnC;AAA6C,UAAA,QAAQ,EAAE,KAAKY;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWI;AAAnC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA7CsC","sourcesContent":["import React from 'react';\nimport './app.css';\nimport { MainWeather } from '../weather';\nimport { LocationForm } from '../locationForm';\nimport { Weather } from '../../Weather';\nimport { reduceForecast } from '../../Utils';\nimport { DailyWeather } from '../DailyForecast';\nconst { REACT_APP_APP_ID } = process.env;\nexport class App extends React.Component {\n  state = {\n    currentDayWeather: undefined,\n    location: 'London',\n    forecast: [],\n  };\n  getCurrentWeather = async () => {\n    const requestUrl = `https://api.openweathermap.org/data/2.5/weather?appid=${REACT_APP_APP_ID}&q=${this.state.location}&units=metric`;\n    const response = await fetch(requestUrl);\n    const data = await response.json();\n    this.setState({ currentDayWeather: new Weather(data) });\n  };\n\n  getForecast = async () => {\n    const requestUrl = `https://api.openweathermap.org/data/2.5/forecast?appid=${REACT_APP_APP_ID}&q=${this.state.location}&units=metric&cnt=40`;\n    const response = await fetch(requestUrl);\n    const data = await response.json();\n    const dayliForecast = reduceForecast(data.list);\n    this.setState({ forecast: dayliForecast });\n  };\n\n  componentDidMount() {\n    this.getCurrentWeather();\n    this.getForecast();\n  }\n  search = (text) => {\n    this.setState({ location: text }, () => {\n      this.getCurrentWeather();\n      this.getForecast();\n    });\n  };\n\n  render() {\n    if (!this.state.currentDayWeather) {\n      return <h2>LOADING...</h2>;\n    }\n\n    return (\n      <div>\n        <MainWeather data={this.state.currentDayWeather}>\n          <LocationForm location={this.state.location} onSubmit={this.search} />\n        </MainWeather>\n        <DailyWeather forecast={this.state.forecast} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}